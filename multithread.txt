多线程

启动线程的三种方式:Thread Runnable, ExcutorThreadPool线程池

yeild,join,sleep


不建议用 stop

interrupt用于程序底层退出,同时通知其他线程终止运行,业务实现中一般用不到.


synchronized:

synchronized method = synchronized(this)
synchronized static method = synchronized(T.class)

静态方法是单例吗?一般是,但是不同的类加载器可以生成不同的静态方法,静态类.

共享资源数据一致性问题:
	
synchronized还需要volited吗?不需要synchronized既可以保证可见性也能保证原子性

类加载顺序


同步方法调用时是否允许调用非同步方法?
脏读的典型场景,写加锁,读不加锁,这时就可能读取到中间状态,这个并不一定是问题,需要看自己的业务场景是否允许.

可重入:

	同一把锁是否允许当前线程访问拥有同一把锁的其他方法,如果运行则是可重入,不允许则不可重入.
	可重入对于Java很重要,比较典型的场景是子类访问父类方法,如果不可重入,则会出现同一把锁无法调用父类方法的问题.
	
	


锁升级:	




